---

- name: Updating {{ package_mgr }} package list
  include: "packages/{{ package_mgr }}-update.yml"

- name: Get list of installed packages (pre)
  ansible.builtin.package_facts:

- name: Save the package info in simplified form (pre)
  set_fact:
    package_pre: "{{ ansible_facts.packages }}"
    package_pre1: "{{ ansible_facts.packages | json_query(q1) }}"
    package_pre2: "{{ ansible_facts.packages | json_query(q2) }}"
  vars:
    q1: '*[].name'
    q2: '*[].{ name: name, version: version}'

- name: Including task for package manager {{ package_mgr }}
  include: "packages/{{ package_mgr }}-{{ package_mode }}.yml"

- name: Get list of installed packages (post)
  ansible.builtin.package_facts:

- name: Save the package info in simplified form (post)
  set_fact:
    package_post: "{{ ansible_facts.packages }}"
    package_post1: "{{ ansible_facts.packages | json_query(q1) }}"
    package_post2: "{{ ansible_facts.packages | json_query(q2) }}"
  vars:
    q1: '*[].name'
    q2: '*[].{ name: name, version: version}'

- name: Packages installed  # noqa no-handler
  debug:
    msg: "{{ package_post1 | difference(package_pre1) }}"
  when:
    - packages_result.changed is undefined or packages_result.changed

- name: Packages removed  # noqa no-handler
  debug:
    msg: "{{ package_pre1 | difference(package_post1) }}"
  when:
    - packages_result.changed is undefined or packages_result.changed

#- name: Packages upgraded
#  debug:
#    msg: "{{ item }} : {{ package_pre[item]|json_query('[].version')|first }} => {{ package_post[item]|json_query('[].version')|first }}"
#  loop: "{{ package_pre1 | intersect(package_post1) }}"
#  when: (package_pre[item]|json_query('[].version')|first) != (package_post[item]|json_query('[].version')|first)

- name: Packages upgraded
  debug:
    msg: |
      [
        {% for item in (package_pre1 | intersect(package_post1)) -%}
        {% if (package_pre[item]|json_query('[].version')|first) != (package_post[item]|json_query('[].version')|first) %}
        "{{ item }}"{% if not loop.last %},{% endif %}
        {% endif %}
        {% endfor %}
      ]
