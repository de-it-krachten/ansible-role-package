---

- name: Reset package mode
  ansible.builtin.set_fact:
    _package_mode: "{{ package_mode | regex_replace('-verbose') }}"

- name: Get list of installed pip packages (pre)
  community.general.pip_package_info:
    clients: "{{ package_pip_cmd }}"
  register: _pip_packages1

- name: Save the package info in simplified form (pre)
  ansible.builtin.set_fact:
    package_pre: "{{ _pip_packages1['packages'][package_pip_cmd] }}"
    package_pre1: "{{ _pip_packages1['packages'][package_pip_cmd] | json_query(q1) }}"
    package_pre2: "{{ _pip_packages1['packages'][package_pip_cmd] | json_query(q2) }}"
  vars:
    q1: '*[].name'
    q2: '*[].{ name: name, version: version}'

- name: Including task for package manager {{ package_mgr }}
  ansible.builtin.include_tasks: "packages/{{ package_mgr }}-{{ _package_mode }}.yml"

- name: Show changes  # noqa no-handler
  when: pip_packages_result.changed
  block:

    - name: Get list of installed pip packages (post)
      community.general.pip_package_info:
        clients: "{{ package_pip_cmd }}"
      register: _pip_packages2

    - name: Save the package info in simplified form (post)
      ansible.builtin.set_fact:
        package_post: "{{ _pip_packages2['packages'][package_pip_cmd] }}"
        package_post1: "{{ _pip_packages2['packages'][package_pip_cmd] | json_query(q1) }}"
        package_post2: "{{ _pip_packages2['packages'][package_pip_cmd] | json_query(q2) }}"
      vars:
        q1: '*[].name'
        q2: '*[].{ name: name, version: version}'

    - name: Create lists of installed/remove/changed packages
      ansible.builtin.set_fact:
        _installed: "{{ package_post1 | difference(package_pre1) | sort }}"
        _removed: "{{ package_pre1 | difference(package_post1) | sort }}"
        _updated: >
          [
            {% for item in (package_pre1 | intersect(package_post1)) -%}
            {% if (package_pre[item] | json_query('[].version') | first) != (package_post[item] | json_query('[].version') | first) %}
            "{{ item }}"{% if not loop.last %},{% endif %}
            {% endif %}
            {% endfor %}
          ]

    - name: Packages installed
      ansible.builtin.debug:
        msg: "{{ _installed }}"
      when: _installed | length > 0

    - name: Packages removed
      ansible.builtin.debug:
        msg: "{{ _removed }}"
      when: _removed | length > 0

    - name: Packages upgraded
      ansible.builtin.debug:
        msg: "{{ _updated }}"
      when: _updated | length > 0
